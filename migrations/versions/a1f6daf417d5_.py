"""empty message

Revision ID: a1f6daf417d5
Revises: 
Create Date: 2020-08-20 17:53:56.903809

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a1f6daf417d5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesses',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('longitude', sa.Float(), nullable=False),
                    sa.Column('latitude', sa.Float(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('city', sa.String(length=50), nullable=False),
                    sa.Column('state', sa.String(length=2), nullable=False),
                    sa.Column('country', sa.String(length=2), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_profiles',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('username', sa.String(
                        length=30), nullable=False),
                    sa.Column('password', sa.String(
                        length=60), nullable=False),
                    sa.Column('avatar_url', sa.String(
                        length=320), nullable=True),
                    sa.Column('banner_url', sa.String(
                        length=320), nullable=True),
                    sa.Column('byline', sa.String(length=200), nullable=True),
                    sa.Column('bio', sa.String(length=500), nullable=True),
                    sa.Column('city', sa.String(length=50), nullable=False),
                    sa.Column('state', sa.String(length=50), nullable=False),
                    sa.Column('country', sa.String(length=50), nullable=False),
                    sa.Column('is_admin', sa.Boolean(), nullable=False),
                    sa.Column('preferences', sa.PickleType(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_user_profiles_email'),
                    'user_profiles', ['email'], unique=True)
    op.create_table('missions',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('editor', sa.Integer(), nullable=True),
                    sa.Column('author_', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.Column('description', sa.String(
                        length=100), nullable=True),
                    sa.Column('is_public', sa.Boolean(), nullable=True),
                    sa.Column('date_shared', sa.DateTime(), nullable=True),
                    sa.Column('city', sa.String(length=50), nullable=True),
                    sa.Column('state', sa.String(length=2), nullable=True),
                    sa.Column('country', sa.String(length=2), nullable=False),
                    sa.Column('likes', sa.PickleType(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['editor'], ['user_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_missions_city'),
                    'missions', ['city'], unique=False)
    op.create_index(op.f('ix_missions_state'),
                    'missions', ['state'], unique=False)
    op.create_index('name_like', 'missions', [
                    'name'], unique=False, postgresql_ops={'name': 'text_pattern_ops'})
    op.create_index('order_date_shared_desc', 'missions', [sa.text(
        'date_shared DESC')], unique=False, postgresql_using='btree', postgresql_ops={'date_shared': 'DESC'})
    op.create_table('missions_businesses',
                    sa.Column('mission_id', sa.Integer(), nullable=False),
                    sa.Column('business_id', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['business_id'], ['businesses.id'], ),
                    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
                    sa.PrimaryKeyConstraint('mission_id', 'business_id')
                    )
    op.create_table('reports',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('mission_id', sa.Integer(), nullable=True),
                    sa.Column('business_id', sa.String(), nullable=True),
                    sa.Column('submitted_on', sa.DateTime(), nullable=True),
                    sa.Column('text', sa.Text(), nullable=False),
                    sa.Column('photo_url', sa.String(), nullable=True),
                    sa.Column('photo_file', sa.String(
                        length=255), nullable=True),
                    sa.Column('likes', sa.PickleType(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['business_id'], ['businesses.id'], ),
                    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users_missions',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('mission_id', sa.Integer(), nullable=False),
                    sa.Column('goals_completed',
                              sa.PickleType(), nullable=True),
                    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user_profiles.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'mission_id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_missions')
    op.drop_table('reports')
    op.drop_table('missions_businesses')
    op.drop_index('order_date_shared_desc', table_name='missions')
    op.drop_index('name_like', table_name='missions')
    op.drop_index(op.f('ix_missions_state'), table_name='missions')
    op.drop_index(op.f('ix_missions_city'), table_name='missions')
    op.drop_table('missions')
    op.drop_index(op.f('ix_user_profiles_email'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_table('businesses')
    # ### end Alembic commands ###
